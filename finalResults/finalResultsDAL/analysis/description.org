* Goal: giant table
  :PROPERTIES:
  :alpha:    [2020-04-27 Mon 11:42]
  :END:
** sample a
   :PROPERTIES:
   :alpha:    [2020-04-27 Mon 20:28]
   :END:
 | 1      | 2  | 3           | 4 | 5      | 6   | 7   |    8 |  9 |      10 | 11 | 12  |          13 | 14 |   15 | 16 | 17 | 18          |
 | solver | f1 | DataDisplay | 0 | order4 | S0  | txt | 3904 | 93 |    3600 |  4 | s   | SATISFIABLE |    |      |    |    |             |
 | solver | f1 | DataDisplay | 0 | order4 | seq | A   |    2 |  1 | EDCBAir | S0 | txt |        3908 | 67 | 3600 |  9 | s  | SATISFIABLE |
 | solver | f1 | DataDisplay | 0 | order4 | seq | A   |    2 |  1 | irabcde | S0 | txt |        3735 | 66 | 3600 |  2 | s  | SATISFIABLE |

This is the most effective filter so far. I think it is a global one.
 #+begin_src awk :dir ./sampleA/run21/output :in-file "solver*" 
   BEGIN {FS="[[:blank:]_/]|"}
   /\ts/ {
       myline =$NF;
   }
   /\tn/ { 
       myline=myline " " $NF " "$(NF-2);
       FS = "[\.\_-]";
       $0 = FILENAME;
       $1=$1;
       if(NF>=1){
	   for(i=2;i<NF-1;i++) myline= myline " " $i;}
       print myline;
       FS="[[:blank:]_/]|";
   }  
 #+end_src

 #+RESULTS:
 | SATISFIABLE | 14 | 3600.07 | f1 | DataDisplay | 0 | order4 |     |   |   |          |         |
 | SATISFIABLE | 14 | 3600.13 | f1 | DataDisplay | 0 | order4 | seq | A | 2 |        1 | EDCBAir |
 | SATISFIABLE | 15 | 3600.04 | f1 | DataDisplay | 0 | order4 | seq | A | 2 |        1 | irabcde |
 | SATISFIABLE | 15 | 3600.04 | f1 | DataDisplay | 0 | order4 | seq | A | 2 |        1 | irEDCBA |
 | SATISFIABLE | 16 | 3600.04 | f1 | DataDisplay | 0 | order4 | seq | A | 2 |        2 | abcdeir |
 | SATISFIABLE | 16 | 3600.04 | f1 | DataDisplay | 0 | order4 | seq | A | 2 |        2 | EDCBAir |
 | SATISFIABLE | 16 | 3600.04 | f1 | DataDisplay | 0 | order4 | seq | A | 2 |        2 | irabcde |
 | SATISFIABLE | 15 |  3600.1 | f1 | DataDisplay | 0 | order4 | seq | A | 2 |        2 | irEDCBA |
 | SATISFIABLE | 22 |  3600.1 | f1 | DataDisplay | 0 | order4 | seq | A | 2 | combined | abcdeir |
 | SATISFIABLE | 23 | 3600.07 | f1 | DataDisplay | 0 | order4 | seq | A | 2 | combined | EDCBAir |
 | SATISFIABLE | 23 | 3600.04 | f1 | DataDisplay | 0 | order4 | seq | A | 2 | combined | irabcde |
 | SATISFIABLE | 22 | 3600.06 | f1 | DataDisplay | 0 | order4 | seq | A | 2 | combined | irEDCBA |
 | OPTIMUM     | 10 |    1.05 | f1 | DataDisplay | 0 | order4 | seq | A | 3 |        1 | abcdeir |
 | OPTIMUM     | 10 |    1.02 | f1 | DataDisplay | 0 | order4 | seq | A | 3 |        1 | EDCBAir |
 | OPTIMUM     | 10 |    0.97 | f1 | DataDisplay | 0 | order4 | seq | A | 3 |        1 | irabcde |
 | OPTIMUM     | 10 |     0.6 | f1 | DataDisplay | 0 | order4 | seq | A | 3 |        1 | irEDCBA |
 | OPTIMUM     | 12 |    0.68 | f1 | DataDisplay | 0 | order4 | seq | A | 3 |        2 | abcdeir |
 | OPTIMUM     | 12 |    0.96 | f1 | DataDisplay | 0 | order4 | seq | A | 3 |        2 | EDCBAir |
 | OPTIMUM     | 12 |    0.54 | f1 | DataDisplay | 0 | order4 | seq | A | 3 |        2 | irabcde |
 | OPTIMUM     | 12 |    0.56 | f1 | DataDisplay | 0 | order4 | seq | A | 3 |        2 | irEDCBA |
 | OPTIMUM     | 13 |    1.15 | f1 | DataDisplay | 0 | order4 | seq | A | 3 | combined | abcdeir |
 | OPTIMUM     | 13 |    1.06 | f1 | DataDisplay | 0 | order4 | seq | A | 3 | combined | EDCBAir |
 | OPTIMUM     | 13 |    0.67 | f1 | DataDisplay | 0 | order4 | seq | A | 3 | combined | irabcde |
 | OPTIMUM     | 13 |    1.16 | f1 | DataDisplay | 0 | order4 | seq | A | 3 | combined | irEDCBA |
 | SATISFIABLE | 28 | 3600.11 | f1 | DataDisplay | 0 | order4 | seq | B | 2 |        1 | abcdeir |
 | SATISFIABLE | 29 | 3600.04 | f1 | DataDisplay | 0 | order4 | seq | B | 2 |        1 | EDCBAir |
 | SATISFIABLE | 30 | 3600.04 | f1 | DataDisplay | 0 | order4 | seq | B | 2 |        1 | irabcde |
 | SATISFIABLE | 37 | 3600.05 | f1 | DataDisplay | 0 | order4 | seq | B | 2 |        1 | irEDCBA |
 | SATISFIABLE | 27 | 3600.04 | f1 | DataDisplay | 0 | order4 | seq | B | 2 |        2 | abcdeir |
 | SATISFIABLE | 27 | 3600.09 | f1 | DataDisplay | 0 | order4 | seq | B | 2 |        2 | EDCBAir |
 | SATISFIABLE | 27 | 3600.11 | f1 | DataDisplay | 0 | order4 | seq | B | 2 |        2 | irabcde |
 | SATISFIABLE | 27 | 3600.06 | f1 | DataDisplay | 0 | order4 | seq | B | 2 |        2 | irEDCBA |
 | SATISFIABLE | 28 | 3600.04 | f1 | DataDisplay | 0 | order4 | seq | B | 2 | combined | abcdeir |
 | SATISFIABLE | 28 | 3600.14 | f1 | DataDisplay | 0 | order4 | seq | B | 2 | combined | EDCBAir |
 | SATISFIABLE | 28 | 3600.04 | f1 | DataDisplay | 0 | order4 | seq | B | 2 | combined | irabcde |
 | SATISFIABLE | 43 | 3600.05 | f1 | DataDisplay | 0 | order4 | seq | B | 2 | combined | irEDCBA |
 | OPTIMUM     | 70 |  131.44 | f1 | DataDisplay | 0 | order4 | seq | B | 3 |        1 | abcdeir |
 | OPTIMUM     | 70 |  102.68 | f1 | DataDisplay | 0 | order4 | seq | B | 3 |        1 | EDCBAir |
 | OPTIMUM     | 70 |  138.19 | f1 | DataDisplay | 0 | order4 | seq | B | 3 |        1 | irabcde |
 | OPTIMUM     | 70 |   164.3 | f1 | DataDisplay | 0 | order4 | seq | B | 3 |        1 | irEDCBA |
 | OPTIMUM     | 79 |   53.64 | f1 | DataDisplay | 0 | order4 | seq | B | 3 |        2 | abcdeir |
 | OPTIMUM     | 79 |   90.93 | f1 | DataDisplay | 0 | order4 | seq | B | 3 |        2 | EDCBAir |
 | OPTIMUM     | 79 |   56.19 | f1 | DataDisplay | 0 | order4 | seq | B | 3 |        2 | irabcde |
 | OPTIMUM     | 79 |   86.84 | f1 | DataDisplay | 0 | order4 | seq | B | 3 |        2 | irEDCBA |
 | OPTIMUM     | 85 |  149.42 | f1 | DataDisplay | 0 | order4 | seq | B | 3 | combined | abcdeir |
 | OPTIMUM     | 85 |  179.79 | f1 | DataDisplay | 0 | order4 | seq | B | 3 | combined | EDCBAir |
 | OPTIMUM     | 85 |  170.23 | f1 | DataDisplay | 0 | order4 | seq | B | 3 | combined | irabcde |
 | OPTIMUM     | 85 |  116.35 | f1 | DataDisplay | 0 | order4 | seq | B | 3 | combined | irEDCBA |



** sample b
   :PROPERTIES:
   :alpha:    [2020-04-27 Mon 20:28]
   :END:
 #+begin_src awk :dir  (expand-file-name "../output") :in-file "solver*"
   BEGIN {FS="[[:blank:]\.\_/-]|"}
   /\ts/ {$0 = FILENAME " " $0;$1=$1; 
       # print $0;
       myline = " " $10 " " $2 " " $3 " " $4 " " $5 " " $6 " " $7 " " $8 " " $9 " " $14"."$15 " " $17 " "; }
   /\tn/ { myline=myline " " $4;
       print myline;
       myline=""}  
 #+end_src

** Useful scripts
   :PROPERTIES:
   :alpha:    [2020-04-27 Mon 22:05]
   :END:
   #+begin_src bash :eval no
for file in $(find  sampleB/ -name '*tableGenerator.sh' -follow);do pushd $(dirname $file); source $(basename $file) ;popd;done
   #+end_src
